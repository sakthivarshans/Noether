{
  "entities": {
    "UserProfile": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserProfile",
      "type": "object",
      "description": "Represents a user's profile information.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the UserProfile entity (matches Firebase Auth UID)."
        },
        "email": {
          "type": "string",
          "description": "User's email address.",
          "format": "email"
        },
        "name": {
          "type": "string",
          "description": "User's full name."
        },
        "college": {
          "type": "string",
          "description": "User's college or university."
        },
        "degree": {
          "type": "string",
          "description": "User's degree program."
        },
        "summary": {
          "type": "string",
          "description": "A brief biography or summary of the user."
        },
        "projects": {
          "type": "string",
          "description": "A markdown-style list of user's projects."
        },
        "hobbies": {
          "type": "string",
          "description": "User's hobbies and interests."
        },
        "skills": {
          "type": "string",
          "description": "User's skills."
        },
        "profileImageURL": {
          "type": "string",
          "description": "URL of the user's profile image.",
          "format": "uri"
        }
      },
      "required": [
        "id",
        "email",
        "name"
      ]
    },
    "Document": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Document",
      "type": "object",
      "description": "Represents a document uploaded by the user, along with its summary and flashcards.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Document entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to UserProfile. (Relationship: UserProfile 1:N Document)"
        },
        "filename": {
          "type": "string",
          "description": "Name of the uploaded file."
        },
        "uploadDate": {
          "type": "string",
          "description": "Date and time when the document was uploaded.",
          "format": "date-time"
        },
        "summary": {
          "type": "string",
          "description": "Summary of the document generated by Gemini API."
        },
        "flashcardIds": {
          "type": "array",
          "description": "References to Flashcards. (Relationship: Document 1:N Flashcard)",
          "items": {
            "type": "string"
          }
        },
        "flowchart": {
          "type": "string",
          "description": "Flowchart generated from document, if possible."
        }
      },
      "required": [
        "id",
        "userId",
        "filename",
        "uploadDate",
        "summary"
      ]
    },
    "Flashcard": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Flashcard",
      "type": "object",
      "description": "Represents a flashcard generated from a document.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Flashcard entity."
        },
        "documentId": {
          "type": "string",
          "description": "Reference to Document. (Relationship: Document 1:N Flashcard)"
        },
        "question": {
          "type": "string",
          "description": "Question on the flashcard."
        },
        "answer": {
          "type": "string",
          "description": "Answer to the question on the flashcard."
        }
      },
      "required": [
        "id",
        "documentId",
        "question",
        "answer"
      ]
    },
    "PYQAnswer": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "PYQAnswer",
      "type": "object",
      "description": "Represents an answer generated for a past year question.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the PYQAnswer entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to UserProfile. (Relationship: UserProfile 1:N PYQAnswer)"
        },
        "question": {
          "type": "string",
          "description": "The question from the past year paper."
        },
        "answer": {
          "type": "string",
          "description": "Detailed answer generated by Gemini."
        },
        "uploadDate": {
          "type": "string",
          "description": "Date and time when the PYQ answer was generated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "question",
        "answer",
        "uploadDate"
      ]
    },
    "Timetable": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Timetable",
      "type": "object",
      "description": "Represents a study timetable generated for the user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Timetable entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to UserProfile. (Relationship: UserProfile 1:N Timetable)"
        },
        "subjects": {
          "type": "string",
          "description": "Subjects included in the timetable, in JSON format."
        },
        "totalStudyHours": {
          "type": "number",
          "description": "Total study hours allocated in the timetable."
        },
        "generatedDate": {
          "type": "string",
          "description": "Date and time when the timetable was generated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "subjects",
        "totalStudyHours",
        "generatedDate"
      ]
    },
    "TodoTask": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "TodoTask",
      "type": "object",
      "description": "Represents a task in the user's to-do list.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the TodoTask entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to UserProfile. (Relationship: UserProfile 1:N TodoTask)"
        },
        "title": {
          "type": "string",
          "description": "Title of the task."
        },
        "deadline": {
          "type": "string",
          "description": "Deadline for the task.",
          "format": "date-time"
        },
        "completed": {
          "type": "boolean",
          "description": "Indicates whether the task is completed or not."
        }
      },
      "required": [
        "id",
        "userId",
        "title",
        "deadline",
        "completed"
      ]
    },
    "VoiceNote": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "VoiceNote",
      "type": "object",
      "description": "Represents a voice note created by the user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the VoiceNote entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to UserProfile. (Relationship: UserProfile 1:N VoiceNote)"
        },
        "text": {
          "type": "string",
          "description": "Text transcribed from the voice note."
        },
        "createdDate": {
          "type": "string",
          "description": "Date and time when the voice note was created.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "text",
        "createdDate"
      ]
    },
    "GameScore": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "GameScore",
      "type": "object",
      "description": "Represents a user's score in a brain game.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the GameScore entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to UserProfile. (Relationship: UserProfile 1:N GameScore)"
        },
        "gameName": {
          "type": "string",
          "description": "Name of the game."
        },
        "score": {
          "type": "number",
          "description": "User's score in the game."
        },
        "playedDate": {
          "type": "string",
          "description": "Date and time when the game was played.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "gameName",
        "score",
        "playedDate"
      ]
    }
  },
  "auth": {
    "providers": [
      "google.com"
    ]
  },
  "firestore": {
    "/users/{userId}": {
      "schema": {
        "$ref": "#/entities/UserProfile"
      },
      "description": "Stores public-facing user profile information. The document ID is the same as the Firebase Auth user ID."
    },
    "/users/{userId}/documents/{documentId}": {
      "schema": {
        "$ref": "#/entities/Document"
      },
      "description": "Stores documents uploaded by the user."
    },
    "/users/{userId}/documents/{documentId}/flashcards/{flashcardId}": {
      "schema": {
        "$ref": "#/entities/Flashcard"
      },
      "description": "Stores flashcards generated from a specific document."
    },
    "/users/{userId}/pyqAnswers/{pyqAnswerId}": {
      "schema": {
        "$ref": "#/entities/PYQAnswer"
      },
      "description": "Stores answers generated for past year questions."
    },
    "/users/{userId}/timetables/{timetableId}": {
      "schema": {
        "$ref": "#/entities/Timetable"
      },
      "description": "Stores study timetables generated for the user."
    },
    "/users/{userId}/todoTasks/{todoTaskId}": {
      "schema": {
        "$ref": "#/entities/TodoTask"
      },
      "description": "Stores tasks in the user's to-do list."
    },
    "/users/{userId}/voiceNotes/{voiceNoteId}": {
      "schema": {
        "$ref": "#/entities/VoiceNote"
      },
      "description": "Stores voice notes created by the user."
    },
    "/users/{userId}/gameScores/{gameScoreId}": {
      "schema": {
        "$ref": "#/entities/GameScore"
      },
      "description": "Stores the user's scores in brain games."
    }
  }
}
